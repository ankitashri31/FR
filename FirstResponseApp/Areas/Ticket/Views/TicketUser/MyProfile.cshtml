@model FirstResponseApp.Areas.Ticket.Models.UserDto
@{
    ViewData["Title"] = "My User";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<script src="~/js/TicketUser/MyProfile.js"></script>

<div class="page-header page-header-light">
    <div class="page-header-content header-elements-md-inline">
        <div class="page-title d-flex">
            <h4>@*<i class="icon-arrow-left52 mr-2"></i>*@ <span class="font-weight-semibold">Edit Profile</span></h4>
            <a href="Dumy/index" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
        </div>
    </div>
</div>
<div class="content label-bold">
    @using (Html.BeginForm("MyProfile", "TicketUser", FormMethod.Post, new { id = "AddUserForm", enctype = "multipart/form-data", area = "Ticket" }))
    {
        @Html.HiddenFor(m => m.EmailAddress)

        @Html.HiddenFor(x => x.Id)
        <div class="form-row">
            <div class="col-6">
                <div class="form-group">
                    <label> @Html.DisplayNameFor(x => x.Name)<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "error text-danger" })
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label>
                        @Html.DisplayNameFor(x => x.LastName)<span class="text-danger">*</span>
                    </label>
                    @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "error text-danger" })
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="col-6">
                <div class="form-group">
                    <label>
                        @Html.DisplayNameFor(x => x.EmailAddressEdit)<span class="text-danger">*</span>
                    </label>
                    @Html.TextBoxFor(x => x.EmailAddressEdit, new { @class = "form-control", @disabled = "" })
                    @Html.ValidationMessageFor(model => model.EmailAddressEdit, "", new { @class = "error text-danger" })
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label>
                        @Html.DisplayNameFor(x => x.OrganisationId)<span class="text-danger">*</span>
                    </label>
                    @Html.DropDownListFor(x => Model.OrganisationId, Model.OrganizationList.OrderBy(x => x.Text), "Select", htmlAttributes: new { @class = "form-control", @disabled = "" })
                    @Html.ValidationMessageFor(model => model.OrganisationId, "", new { @class = "error text-danger" })
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="col-2">
                <div class="form-group">
                    <label>
                        @Html.DisplayNameFor(x => x.NotificationCondition)<span class="text-danger">*</span>
                    </label>
                </div>
            </div>
            <div class="col-9">
                <span id="divNotificationCondition" class="text-danger" style="display:none">Select at least one type.</span>
                <div class="check-box-list">
                    <div class="form-group">
                        <label class="checkbox">
                            @Html.CheckBoxFor(m => m.IsNotifyOnActive, new { @disabled = "" })
                            Active/Open (Receive notification when ticket has been posted)
                        </label>
                    </div>
                    <div class="form-group">
                        <label class="checkbox">
                            @Html.CheckBoxFor(m => m.IsNotifyOnUpdate, new { @disabled = "" })
                            Update (Receive notification when ticket has been updated)
                        </label>
                    </div>
                    <div class="form-group">
                        <label class="checkbox">
                            @Html.CheckBoxFor(m => m.IsNotifyOnClose, new { @disabled = "" })
                            Close (Receive notification when ticket has been closed)
                        </label>
                    </div>
                </div>
            </div>



        </div>
        <div class="row">
            <div class="col-12 text-right">
                <button type="submit" class="btn btn-primary" title="Update Profile"><i class="icon-checkmark mr-2"></i>Update Profile</button>
                @*@Html.ActionLink("Cancel", "Profile", "TicketUser", new { @class = "btn btn-danger" }, new { @class = "btn btn-danger", @title = "Cancel" })*@
            <a class="btn btn-danger" href='@Url.Action("Profile","TicketUser",new { id = @Model.Id })' title="Cancel"><i class="icon-cross2"></i> Cancel</a>
            </div>
        </div>
    }
</div>

<div id="ModalSubmitSuccess" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Success</h4>
            </div>
            <div class="modal-body">
                <p>Entry Added successfully!</p>
            </div>
            <div class="modal-footer" style="">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<script src="~/lib/jquery/jquery.js"></script>
<script src="~/lib/jquery-validate/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<script>
    $(document).ready(function () {
        $("#Profile").addClass('active');
    })
</script>
